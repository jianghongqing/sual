server.port=8009
spring.message.encoding=UTF-8
#alibaba 数据库连接池配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://47.110.11.96:3306/SPEMP?useAffectedRows=true&serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
#spring.datasource.druid.url=jdbc:mysql://192.168.0.217:3306/SPEMP?useAffectedRows=true&serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
#spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/SPEMP?useAffectedRows=true&serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
#spring.datasource.druid.url=jdbc:mysql://192.168.1.233:3306/spemp?useAffectedRows=true&serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.username=root
#spring.datasource.druid.password=12345678
spring.datasource.druid.password=123456
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
#检测连接是否有效的sql
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# PSCache Mysql下建议关闭
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# mybatis-plus
# mybatis-config.xml路径配置
mybatis-plus.config-location=classpath:mybatis-config.xml
# 项目Mapper.xml存放位置，classpath:*****，表示项目resources文件夹下，子文件创建时，需要手动一层一层创建
mybatis-plus.mapper-locations=classpath:mapper/*.xml
# 项目Mapper接口存放位置
mybatis-plus.type-aliases-package=com.example.saul.dao
# 数据库类型设置
mybatis-plus.global-config.db-config.db-type=mysql
mybatis-plus.global-config.db-config.column-underline=true
mybatis-plus.global-config.db-config.logic-delete-value=true
mybatis-plus.global-config.db-config.logic-not-delete-value=false
mybatis-plus.global-config.id-type=0
mybatis-plus.global-config.db-column-underline=true
mybatis-plus.global-config.capital-mode=true
# Redis数据库索引（默认为0）
spring.redis.database=0  
# 本地Redis服务器地址 （默认为127.0.0.1）
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=20000ms
#公司内部服务器redis集群：
spring.redis.host=127.0.0.1
spring.redis.port=6379
#日志配置文件
logging.level.com.example.saul.dao=info
#分页插件
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count\=countSql

# 指定日志输入级别
logging.level.com.example.saul=trace 

# 指定日志输出位置和日志文件名
logging.file=./log/log.txt

# 控制台日志输出格式
# -5表示从左显示5个字符宽度
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %boldYellow(%thread) | %boldGreen(%logger) | %msg%n
#文件中输出的格式
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} = [%thread] = %-5level = %logger{50} - %msg%n

netty.websocket.port:1024
# 绑定的网卡
netty.websocket.ip:0.0.0.0
# 消息帧最大体积
netty.websocket.max-frame-size:10240
# URI路径
netty.websocket.path:/channel
